var cov_2m8t4ti69s=function(){var path="smine.js",hash="115138238fe9c8bb555cacaee7303537ca342293",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"smine.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:42}},"1":{start:{line:2,column:15},end:{line:2,column:34}},"2":{start:{line:4,column:17},end:{line:4,column:39}},"3":{start:{line:6,column:0},end:{line:15,column:1}},"4":{start:{line:7,column:17},end:{line:7,column:45}},"5":{start:{line:8,column:2},end:{line:8,column:35}},"6":{start:{line:10,column:19},end:{line:10,column:39}},"7":{start:{line:11,column:2},end:{line:11,column:30}},"8":{start:{line:12,column:2},end:{line:14,column:4}},"9":{start:{line:13,column:4},end:{line:13,column:18}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:6,column:17},end:{line:6,column:18}},loc:{start:{line:6,column:33},end:{line:15,column:1}},line:6},"1":{name:"(anonymous_1)",decl:{start:{line:12,column:28},end:{line:12,column:29}},loc:{start:{line:12,column:35},end:{line:14,column:3}},line:12}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0},b:{},_coverageSchema:"d34fc3e6b8297bcde183f5492bcb8fcb36775295"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const cparser=(cov_2m8t4ti69s.s[0]++,require('./config/parser'));const logger=(cov_2m8t4ti69s.s[1]++,require('./logger'));const MinerNet=(cov_2m8t4ti69s.s[2]++,require('./miner/net'));cov_2m8t4ti69s.s[3]++;module.exports=configPath=>{cov_2m8t4ti69s.f[0]++;const config=(cov_2m8t4ti69s.s[4]++,cparser.readFile(configPath));cov_2m8t4ti69s.s[5]++;logger.info('config is valid :)');const minerNet=(cov_2m8t4ti69s.s[6]++,new MinerNet(config));cov_2m8t4ti69s.s[7]++;logger.info('syncing stats');cov_2m8t4ti69s.s[8]++;minerNet.syncStats().then(b=>{cov_2m8t4ti69s.f[1]++;cov_2m8t4ti69s.s[9]++;console.log(b);});};